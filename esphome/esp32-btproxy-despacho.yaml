substitutions:
  nombre_dispositivo: esp32-btproxy-despacho
  area_local: "despacho"
  invertido_led: "true"

esphome:
  name: ${nombre_dispositivo}
  friendly_name: ${nombre_dispositivo}

  on_boot:
    then:
      - light.turn_on: led_area
      - delay: 1s
      - light.turn_off: led_area
      - delay: 1s
      - light.turn_on: led_area
      - delay: 1s
      - light.turn_off: led_area

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap: {}

logger:
  level: WARN

api:
  encryption:
    key: "cM8kHFf4cDp6tr1NkDZe3/aVneXmYO5it79jQHku2u4="

ota:
  - platform: esphome
    password: "04085f2a51a6ac0c04575cb4fc661b3c"

esp32_ble_tracker:
  scan_parameters:
    interval: 500ms
    window: 400ms  

bluetooth_proxy:
  active: true

output:
  - platform: gpio
    pin:
      number: GPIO2
      inverted: false
    id: gpio_led

light:
  - platform: binary
    id: led_area
    name: "LED area"
    output: gpio_led

binary_sensor:
  - platform: homeassistant
    name: "Presencia"
    entity_id: input_boolean.presencia
    id: presencia
    on_press:
      then:
        - script.execute: led_blink
        - binary_sensor.template.publish:
            id: estado_presencia
            state: ON
    on_release:
      then:
        - script.stop: led_blink
        - light.turn_off: led_area
        - binary_sensor.template.publish:
            id: estado_presencia
            state: OFF

  - platform: template
    name: "Presencia detectada"
    id: estado_presencia
    device_class: occupancy

script:
  - id: led_blink
    mode: restart
    then:
      - while:
          condition:
            lambda: 'return id(presencia).state;'
          then:
            - light.turn_on: led_area
            - delay: 100ms
            - light.turn_off: led_area
            - delay: 7000ms
