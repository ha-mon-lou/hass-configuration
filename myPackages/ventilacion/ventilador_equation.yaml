input_boolean:
  ventilador_equation:
    name: Ventilador Portátil
    icon: mdi:fan

  ventilador_equation_running:
    name: Ventilador Portátil running
    icon: mdi:fan

  ventilador_equation_oscilacion:
    name: Oscilación
    icon: mdi:swap-horizontal

input_select:
  ventilador_equation_modo_auto:
    name: Modo Ventilador Equation
    options:
      - "auto"
      - "manual"

input_number:
  potencia_ventilador_equation:
    name: Potencia Ventilador Equation
    initial: 50
    min: 1
    max: 300
    unit_of_measurement: "W"
    icon: mdi:flash

timer:
  ventilador_equation_timer:
    name: Temporizador Ventilador
    duration: "01:00:00"

sensor:
  - platform: history_stats
    name: Horas ventilador equation hoy
    entity_id: input_boolean.ventilador_equation_running
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

template:
  - sensor:
      - name: "Consumo acumulado ventilador equation"
        unique_id: energia_ventilador_equation
        state: >
          {{ (states('sensor.horas_ventilador_equation_hoy')|float(0) *
            states('input_number.potencia_ventilador_equation')|float(0) / 1000) | round(3) }}
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "Sensacion termica equation"
        unique_id: sensacion_termica_equation
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:thermometer
        state: >
          {% set temp = states('sensor.cfg_sensacion_termica_living_2') %}
          {{ temp | float(0) if temp not in ['unknown', 'unavailable'] else 0 }}

script:
  mando_ventilador_equation:
    fields:
      valor:
        description: "Comando del ventilador (speed, apagar, oscilacion)"
    sequence:
      - service: script.envia_comando_broadlink
        data:
          dispositivo: "ventilador_equation"
          comando: "{{ valor }}"

  ventilador_equation_toggle_modo:
    alias: Alternar modo auto/manual ventilador equation
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.ventilador_equation_modo_auto
          option: >
            {% if is_state('input_select.ventilador_equation_modo_auto', 'manual') %}
              auto
            {% else %}
              manual
            {% endif %}

automation:
  - alias: PKG EQ Ventilador Equation - alguien regresa
    trigger:
      - platform: state
        entity_id: input_boolean.presencia
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.verano
        state: "on"
    action:
      - service: script.modo_ventilador
        data:
          dispositivo: ventilador_equation
          valor: auto
    mode: single

  - alias: PKG EQ Encender ventilador Equation desde input_boolean
    trigger:
      - platform: state
        entity_id: input_boolean.ventilador_equation
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.verano
        state: "on"
    action:
      - service: script.mando_ventilador_equation
        data:
          valor: speed
      - service: input_boolean.turn_on
        target:
          entity_id: "input_boolean.ventilador_equation_running"

  - alias: PKG EQ Apagar ventilador Equation desde input_boolean
    trigger:
      - platform: state
        entity_id: input_boolean.ventilador_equation
        to: "off"
    action:
      - service: script.mando_ventilador_equation
        data:
          valor: Apagar
      - service: script.modo_ventilador
        data:
          dispositivo: ventilador_equation
          valor: manual
      - service: input_boolean.turn_off
        target:
          entity_id: "input_boolean.ventilador_equation_running"

  - alias: PKG EQ Oscilación ventilador Equation
    trigger:
      - platform: state
        entity_id: input_boolean.ventilador_equation_oscilacion
    condition:
      - condition: state
        entity_id: input_boolean.ventilador_equation
        state: "on"
      - condition: state
        entity_id: input_boolean.verano
        state: "on"
    action:
      - service: script.mando_ventilador_equation
        data:
          valor: oscilacion

  - id: "ventilador_equation_auto"
    alias: PKG VE  Control ventilador equation por temperatura
    description: Ajusta la velocidad del ventilador equation según diferencia térmica (PCKG)
    trigger:
      - platform: state
        entity_id:
          - sensor.sensacion_termica_equation
          - input_select.ventilador_equation_modo_auto
          - input_number.ventilador_margen_calor
          - input_number.nivel_sensacion_termica_ideal
    condition:
      - condition: state
        entity_id: input_select.ventilador_equation_modo_auto
        state: "auto"
      - condition: state
        entity_id: input_boolean.verano
        state: "on"
    action:
      - variables:
          dif_temp: >
            {{
              (states('sensor.sensacion_termica_equation') | float(0) +
               states('input_number.ventilador_margen_calor') | float(0)) -
               states('input_number.nivel_sensacion_termica_ideal') | float(0)
            }}
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ dif_temp <= 0.0 }}"
            sequence:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.ventilador_equation
          - conditions:
              - condition: template
                value_template: "{{ dif_temp > 0.2 }}"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.ventilador_equation
    mode: single

  - alias: Actualizar presencia en living 1
    trigger:
      - platform: state
        entity_id:
          - input_select.ubicacion_ramon
          - input_select.ubicacion_pau
    condition:
      - condition: state
        entity_id: input_boolean.verano
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {% set ubicaciones = expand('group.ubicacion_personas') | map(attribute='state') | list %}
                  {{ 'living_1' in ubicaciones or 'living_2' in ubicaciones }}
            sequence:
              - service: script.modo_ventilador
                data:
                  dispositivo: ventilador_equation
                  valor: auto
